{"version":3,"sources":["main.js"],"names":["tabbed","document","querySelector","tablist","tabs","querySelectorAll","panels","switchTab","oldTab","newTab","focus","removeAttribute","setAttribute","index","Array","prototype","indexOf","call","oldIndex","hidden","forEach","tab","i","parentNode","addEventListener","e","preventDefault","currentTab","currentTarget","dir","which","panel","id","getAttribute"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["(function() {\r\n    // Get relevant elements and collections\r\n    const tabbed = document.querySelector('.tabbed');\r\n    const tablist = tabbed.querySelector('ul');\r\n    const tabs = tablist.querySelectorAll('a');\r\n    const panels = tabbed.querySelectorAll('[id^=\"section\"]');\r\n    \r\n    // The tab switching function\r\n    const switchTab = (oldTab, newTab) => {\r\n      newTab.focus();\r\n      // Make the active tab focusable by the user (Tab key)\r\n      newTab.removeAttribute('tabindex');\r\n      // Set the selected state\r\n      newTab.setAttribute('aria-selected', 'true');\r\n      oldTab.removeAttribute('aria-selected');\r\n      oldTab.setAttribute('tabindex', '-1');\r\n      // Get the indices of the new and old tabs to find the correct\r\n      // tab panels to show and hide\r\n      let index = Array.prototype.indexOf.call(tabs, newTab);\r\n      let oldIndex = Array.prototype.indexOf.call(tabs, oldTab);\r\n      panels[oldIndex].hidden = true;\r\n      panels[index].hidden = false;\r\n    }\r\n    \r\n    // Add the tablist role to the first <ul> in the .tabbed container\r\n    tablist.setAttribute('role', 'tablist');\r\n    \r\n    // Add semantics are remove user focusability for each tab\r\n    Array.prototype.forEach.call(tabs, (tab, i) => {\r\n      tab.setAttribute('role', 'tab');\r\n      tab.setAttribute('id', 'tab' + (i + 1));\r\n      tab.setAttribute('tabindex', '-1');\r\n      tab.parentNode.setAttribute('role', 'presentation');\r\n      \r\n      // Handle clicking of tabs for mouse users\r\n      tab.addEventListener('click', e => {\r\n        e.preventDefault();\r\n        let currentTab = tablist.querySelector('[aria-selected]');\r\n        if (e.currentTarget !== currentTab) {\r\n          switchTab(currentTab, e.currentTarget);\r\n        }\r\n      });\r\n      \r\n      // Handle keydown events for keyboard users\r\n      tab.addEventListener('keydown', e => {\r\n        // Get the index of the current tab in the tabs node list\r\n        let index = Array.prototype.indexOf.call(tabs, e.currentTarget);\r\n        // Work out which key the user is pressing and\r\n        // Calculate the new tab's index where appropriate\r\n        let dir = e.which === 37 ? index - 1 : e.which === 39 ? index + 1 : e.which === 40 ? 'down' : null;\r\n        if (dir !== null) {\r\n          e.preventDefault();\r\n          // If the down key is pressed, move focus to the open panel,\r\n          // otherwise switch to the adjacent tab\r\n          dir === 'down' ? panels[i].focus() : tabs[dir] ? switchTab(e.currentTarget, tabs[dir]) : void 0;\r\n        }\r\n      });\r\n    });\r\n    \r\n    // Add tab panel semantics and hide them all\r\n    Array.prototype.forEach.call(panels, (panel, i) => {\r\n      panel.setAttribute('role', 'tabpanel');\r\n      panel.setAttribute('tabindex', '-1');\r\n      let id = panel.getAttribute('id');\r\n      panel.setAttribute('aria-labelledby', tabs[i].id);\r\n      panel.hidden = true; \r\n    });\r\n    \r\n    // Initially activate the first tab and reveal the first tab panel\r\n    tabs[0].removeAttribute('tabindex');\r\n    tabs[0].setAttribute('aria-selected', 'true');\r\n    panels[0].hidden = false;\r\n  })();"]}